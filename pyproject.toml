[project]
name = "vertex-ai-gemini-starter"
version = "0.1.0"
description = "Vertex AI Gemini API スターターキット"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "vertex-ai-gemini-starter contributors"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "google-cloud-aiplatform>=1.38",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
]

[tool.uv]
dev-dependencies = [
    "ipython>=8.0.0",
    "pytest>=7.0.0",
    "anyio>=4.0.0",
    "ruff>=0.4.0",
    "pyright>=1.1.0",
    "pre-commit>=3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
include = ["examples/*"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["vertex_ai_gemini"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
include = ["vertex_ai_gemini", "examples", "tests"]
exclude = ["**/__pycache__"]
strictListInference = true
strict = ["vertex_ai_gemini"]
typeCheckingMode = "basic"
reportOptionalMemberAccess = "warning"
reportOptionalSubscript = "warning"
reportUnusedImport = "warning"
